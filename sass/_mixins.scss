// #======================================#
// #     _____       _ _       _  _       #
// #    |  __ \     (_) |     | || |      #
// #    | |__) |__ _ _| |___  | || |_     #
// #    |  _  // _` | | / __| |__   _|    #
// #    | | \ \ (_| | | \__ \    | |      #
// #    |_|  \_\__,_|_|_|___/    |_|      #
// #                                      #
// #======================================#

@import "_colors";
@import "variables";



// Typography
// (the ridiculous exactness of some numbers is necessary to prevent pixel rounding errors in Chrome!)
// ------------------
@mixin margin-normal {
  margin: 0 0 1.25em 0;
}
@mixin margin-s {
  margin: 0 0 1.2142857em 0;
}
@mixin font-size-xxs($margin: null) {
  font-size: 10px;
  font-size: 0.625rem;
  line-height: 1.5; // 15px
  @if $margin { margin: 0 0 1.5em 0; }
}
@mixin font-size-xs($margin: null) {
  font-size: 12px;
  font-size: 0.75rem;
  line-height: 1.25; // 15px
  @if $margin { margin: 0 0 1.25em 0; }
}
@mixin font-size-s($margin: null) {
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 1.2142857; // 17px
  @if $margin { margin: 0 0 1.2142857em 0; }
}
@mixin font-size-normal($margin: null) {
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.25; // 20px
  @if $margin == "relaxed" { margin: 0 0 1.25em 0; } // 20px
  @else if $margin {
    margin: 0 0 0.625em 0; // 10px
    &.no-margin {
      margin-bottom: 0;
    }
    &.compact {
      margin-bottom: 0;
    }
  }
}
@mixin font-size-l($margin: null) {
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 1.1111111; // 20px
  @if $margin == "relaxed" { margin: 0 0 1.11111111em 0; } // 20px
  @else if $margin {
    margin: 0 0 0.556em 0; // 10px
    &.no-margin {
      margin-bottom: 0;
    }
    html &.compact {
      margin-bottom: 0;
    }
  }
}
@mixin font-size-xl($margin: null) {
  font-size: 24px;
  font-size: 1.5rem;
  line-height: 1.0416667; // 25px
  @if $margin == "compact" { margin: 0 0 0.4167em 0; } // 10px
  @else if $margin { margin: 0 0 0.8333em 0; } // 20px
}
@mixin font-size-xxl($margin: null) {
  font-size: 36px;
  font-size: 2.25rem;
  line-height: 1.11111111; // 40px
  @if $margin {
    margin: 0 0 0.8333em 0; // 30px
    &.no-margin {
      margin-bottom: 0;
    }
    html &.compact {
      margin-bottom: 0.2778em; // 10px
    }
    html &.relaxed {
      margin-bottom: 1.3889em; // 50px
    }
  }
}
@mixin font-size-xxxl($margin: null) {
  font-size: 42px;
  font-size: 2.625rem;
  line-height: 0.952; // 40px
  @if $margin {
    margin: 0 0 0.952em 0; // 40px
    &.no-margin {
      margin-bottom: 0;
    }
    html &.compact {
      margin-bottom: 0.119em; // 5px
    }
  }
}
@mixin font-size-xxxxl($margin: null) {
  font-size: 52px;
  font-size: 3.25rem;
  line-height: 0.962; // 50px
  @if $margin { margin: 0 0 0.962em 0; }
}
@mixin font-weight-light {
  font-weight: 200;
}
@mixin font-weight-medium {
  font-weight: 600;
}
@mixin font-weight-bold {
  font-weight: 800;
}
@mixin font-style-italic {
  font-style: italic;
}
@mixin monospace {
  font-family: "Menlo", "Andale Mono", "Consolas", "Monaco", monospace;
}
@mixin tabular-figures {
  font-variant-numeric: tabular-nums;
  -webkit-font-feature-settings: "tnum" 1;
  -moz-font-feature-settings: "tnum=1";
  -moz-font-feature-settings: "tnum" 1;
  -o-font-feature-settings: "tnum" 1;
  -ms-font-feature-settings: "tnum" 1;
  font-feature-settings: "tnum" 1;
}
@mixin oldstyle-figures {
  font-variant-numeric: oldstyle-nums;
  -webkit-font-feature-settings: "onum" 1;
  -moz-font-feature-settings: "onum=1";
  -moz-font-feature-settings: "onum" 1;
  -o-font-feature-settings: "onum" 1;
  -ms-font-feature-settings: "onum" 1;
  font-feature-settings: "onum" 1;
}
@mixin hyphens($val:auto) {
  -webkit-hyphens: $val;
  -moz-hyphens: $val;
  -ms-hyphens: $val;
  -o-hyphens: $val;
  hyphens: $val;
}
@mixin ligatures($discretionary: null) {
  @if $discretionary {
    font-variant-ligatures: discretionary-ligatures;
    -webkit-font-feature-settings: "liga" 1, "dlig" 1;
    -moz-font-feature-settings: "liga=1", "dlig=1";
    -moz-font-feature-settings: "liga" 1, "dlig" 1;
    -ms-font-feature-settings: "liga" 1, "dlig" 1;
    font-feature-settings: "liga" 1, "dlig" 1;
  }
  @else {
    font-variant-ligatures: common-ligatures;
    -webkit-font-feature-settings: "liga" 1;
    -moz-font-feature-settings: "liga=1";
    -moz-font-feature-settings: "liga" 1;
    -ms-font-feature-settings: "liga" 1;
    font-feature-settings: "liga" 1;
  }
}



// Transition
// ------------------
@mixin transition($transition:all .2s ease-in-out) {
  transition: $transition;
}

// Opacity
// ------------------
@mixin opacity($opacity) {
  opacity: $opacity;
  html.lt-ie9 & {
    filter: alpha(opacity=($opacity * 100));
  }
}

// Box sizing
// ------------------
@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
     -moz-box-sizing: $boxmodel;
          box-sizing: $boxmodel;
}

// Scale
// ------------------
@mixin scale($x:1, $y:1, $origX:0, $origY:0) {
  @if $x == none {
    -webkit-transform: none;
        -ms-transform: none;
         -o-transform: none;
            transform: none;
  }
  @else {
    -webkit-transform: scale($x, $y);
        -ms-transform: scale($x, $y);
         -o-transform: scale($x, $y);
            transform: scale($x, $y);
    -webkit-transform-origin: $origX $origY;
        -ms-transform-origin: $origX $origY;
         -o-transform-origin: $origX $origY;
            transform-origin: $origX $origY;
  }
}

// Translate
// ------------------
@mixin translateX($x:0) {
  -webkit-transform: translate3D($x, 0, 0);
     -moz-transform: translate3D($x, 0, 0);
      -ms-transform: translate3D($x, 0, 0);
       -o-transform: translate3D($x, 0, 0);
          transform: translate3D($x, 0, 0);
}
@mixin translateY($y:0) {
  -webkit-transform: translate3D(0, $y, 0);
     -moz-transform: translate3D(0, $y, 0);
      -ms-transform: translate3D(0, $y, 0);
       -o-transform: translate3D(0, $y, 0);
          transform: translate3D(0, $y, 0);
}

// Underline
// ------------------
@mixin underline($color: $grayLighter, $thickness: 1px) {
  @if $color == none {
    text-decoration: none;
    text-shadow: none;
    background-color: transparent;
    background-image: none;
  }
  @else {
    text-shadow: 0 2px 0 $white, 2px 0 0 $white, -2px 0 0 $white;
    background-color: rgba(0,0,0,0);
    background-image: linear-gradient($color $thickness, transparent $thickness);
    background-size: $gridColumnWidth 3px;
    background-position: left bottom;
    background-repeat: repeat-x;
    html.lt-ie9 & {
      text-decoration: underline;
    }
  }
}

// Grayscale
// ---------
@mixin grayscale($state: true) {
  @if $state == false {
    -webkit-filter: none;
    -moz-filter: none;
    -ms-filter: none;
    -o-filter: none;
    filter: none;
  }
  @else {
    -webkit-filter: grayscale(100%);
    -moz-filter: grayscale(100%);
    -ms-filter: grayscale(100%);
    -o-filter: grayscale(100%);
    filter: grayscale(100%);
    filter: gray;
  }
}

// Columns
// ------------------
@mixin cw_columns($count:2, $gap:20px, $rule_color:#000, $rule_style:solid, $rule_width:1px) {
  -moz-column-count: $count;
  -moz-column-gap: $gap;
  -moz-column-rule-color: $rule_color;
  -moz-column-rule-style: $rule_style;
  -moz-column-rule-width: $rule_width;
  -webkit-column-count: $count;
  -webkit-column-gap : $gap;
  -webkit-column-rule-color: $rule_color;
  -webkit-column-rule-style: $rule_style;
  -webkit-column-rule-width: $rule_width;
  column-count: $count;
  column-gap: $gap;
  column-rule-color: $rule_color;
  column-rule-style: $rule_style;
  column-rule-width: $rule_width;
}
@mixin cw_columns_count($count:2) {
  -moz-column-count: $count;
  -webkit-column-count: $count;
  column-count: $count;
}
@mixin cw_columns_avoidbreak {
  break-inside: avoid-column;
  -webkit-column-break-inside: avoid;
}

// Default rounded corners
// -----------------------
@mixin cw_rounded_corners($radius:$gutterWidth/4) {
  border-radius: $radius $radius $radius $radius;
  overflow: hidden;
}
@mixin cw_rounded_corners_left($radius:$gutterWidth/4) {
  border-radius: $radius 0 0 $radius;
  overflow: hidden;
}
@mixin cw_rounded_corners_right($radius:$gutterWidth/4) {
  border-radius: 0 $radius $radius 0;
  overflow: hidden;
}
@mixin cw_rounded_corners_top($radius:$gutterWidth/4) {
  border-radius: $radius $radius 0 0;
  overflow: hidden;
}
@mixin cw_rounded_corners_bottom($radius:$gutterWidth/4) {
  border-radius: 0 0 $radius $radius;
  overflow: hidden;
}

// Clearfix
// ------------------
@mixin clearfix {
  html.lt-ie9 & {
    zoom: 1;
  }
  &:before,
  &:after {
    display: table;
    content: "";
    line-height: 0;
  }
  &:after {
    clear: both;
  }
}



// Icon font
// ---------
@mixin cw_icon_font($content) {
  // dependent on js added class, to prevent IE8 bug
  // http://andymcfee.com/2012/04/04/icon-fonts-pseudo-elements-and-ie8/
  html.dropmenus-active & {
    content: $content;
    font-family: "entypo", "ProximaNova", "Helvetica Neue", "Arial", sans-serif;
    font-weight: 200;
    white-space: nowrap;
    vertical-align: text-bottom;
  }
}
@mixin cw_icon_fontfamily($size:0.875em) {
  font-family: "entypo", "ProximaNova", "Helvetica Neue", "Arial", sans-serif;
  font-weight: 200;
  font-size: $size;
  vertical-align: text-bottom;
}



// Flexbox
// -------
@mixin flexbox_justify($grow:'') {
  // http://caniuse.com/#feat=flexbox
  // IE10 only supports 2012 syntax for flexbox
  display: -ms-flexbox;
  -ms-flex-direction: row;
  -ms-flex-pack: justify;
  // pre Safari 6.1
  display: -webkit-box;
  -webkit-box-orient: horizontal;
  -webkit-box-pack: justify;
  // modern flexbox
  display: -webkit-flex;
  -webkit-flex-direction: row;
  -webkit-justify-content: space-between;
  display: -moz-flex;
  -moz-flex-direction: row;
  -moz-justify-content: space-between;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  @if $grow == 'grow' {
    > * {
      -ms-flex-grow: 1;
      -webkit-flex-grow: 1;
      -moz-flex-grow: 1;
      flex-grow: 1;
    }
  }
  html.lt-ie10 & { // no flexbox
    display: table;
    width: 100%;
    > * {
      display: table-cell;
      text-align: center;
      > * {
        display: inline-block;
      }
    }
  }
  html.lt-ie8 & { // no table display
    display: block;
    text-align: center;
    > * {
      display: inline;
      margin: 0 $gutterWidth;
      > * {
        display: inline;
      }
    }
  }
}



// dropdown menu
// -------------
@mixin cw_dropmenu {
  position: relative;
  z-index: 100;
  .cw_dropmenu_trigger {
    position: relative;
    z-index: 11;
    display: block;
    margin: $gutterHeight*0.3 0 -1px 0;
    padding: ($gutterHeight*0.4) ($gutterWidth/2) ($gutterHeight*0.75 - 1) ($gutterWidth*0.75) !important;
    border: 1px solid transparent;
    border-bottom: none;
    cursor: default;
    color: $black !important;
    text-decoration: none;
    white-space: nowrap;
    &:hover,
    &:focus {
      color: $black !important;
      background-color: transparent;
      border-color: transparent;
      outline: none;
    }
    &:after {
      @include cw_icon_font("\E0BC");
    }
  }
  .cw_dropmenu_content-wrapper {
    visibility: hidden;
    opacity: 0;
    transition: opacity .2s linear;
  }
  .cw_dropmenu_content {
    position: absolute;
    right: 1px;
    z-index: 10;
    margin: 0;
    padding: $gutterHeight/2 0 !important;
    border-top: 1px solid $grayLighterer2;
    box-shadow: 0 1px 0 $shadow_color, -1px 0 0 $shadow_color, 1px 0 0 $shadow_color;
    html.lt-ie9 & {
      right: 0;
      border: 1px solid $grayLighterer2;
    }
    background-color: $white;
    @include translateY(-$gutterHeight/2);
    transition: transform .2s ease-out;
    .cw_menu_devider_bottom {
      border-bottom: 1px solid $grayLighterer2;
      margin-bottom: $gutterHeight/2;
      padding-bottom: $gutterHeight/2;
    }
    .cw_menu_devider_top {
      border-top: 1px solid $grayLighterer2;
      margin-top: $gutterHeight/2 !important;
      padding-top: $gutterHeight/2 !important;
    }
    ul {
      list-style-type: none;
      margin: 0 !important;
      padding: 0 !important;
      li {
        float: none !important;
        a {
          display: block;
          padding: 0.25em $gutterWidth/2;
          color: $black !important;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
          &:hover,
          &:focus {
            text-decoration: none;
          }
          body.v1-v2 &:hover,
          html.mod-no-touch &:hover,
          &:focus {
            color: $white !important;
            background-color: $blue !important;
          }
        }
      }
    }
    .cw_dropmenu_extra {
      text-align: center;
      border-top: 1px solid $grayLighterer2;
      margin-top: $gutterHeight/2;
      padding-top: $gutterHeight/2;
    }
  }
  &.open {
    z-index: 1000;
    .cw_dropmenu_trigger {
      background-color: $white !important;
      border-color: $grayLighterer2;
    }
    .cw_dropmenu_content-wrapper {
      visibility: visible;
      opacity: 1;
    }
    .cw_dropmenu_content {
      @include translateY(0);
    }
  }
  html.no-js &:hover,
  html.no-js &:focus {
    z-index: 1000;
    .cw_dropmenu_trigger {
      background-color: $white !important;
      border-color: $grayLighterer2;
    }
    .cw_dropmenu_content-wrapper {
      visibility: visible;
      opacity: 1;
    }
    .cw_dropmenu_content {
      @include translateY(0);
    }
  }
}



// form element placeholders
// -------------------------
@mixin cw_placeholder() {
  &::-webkit-input-placeholder{
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
}


// Media queries
// -------------
@mixin cw_mediaquery($type) {
  @if $type == "mobile" {
    @media only screen and (max-width: $width_small - 1) {
      @content;
    }
  }
  @else if $type == "tablet_and_smaller" {
    @media only screen and (max-width: $width_medium - 1) {
      @content;
    }
  }
  @else if $type == "tablet_only" {
    @media only screen and (min-width: $width_small) and (max-width: $width_medium - 1) {
      @content;
    }
  }
  @else if $type == "tablet_and_bigger" {
    @media only screen and (min-width: $width_small) {
      @content;
    }
  }
  @else if $type == "desktop_and_smaller" {
    @media only screen and (max-width: $width_large - 1) {
      @content;
    }
  }
  @else if $type == "desktop_only" {
    @media only screen and (min-width: $width_medium) and (max-width: $width_large - 1) {
      @content;
    }
  }
  @else if $type == "desktop_and_bigger" {
    @media only screen and (min-width: $width_medium) {
      @content;
    }
  }
  @else if $type == "widescreen" {
    @media only screen and (min-width: $width_large) {
      @content;
    }
  }
}
